{"version":3,"file":"index.js","sources":["../../src/client/composables/setupDevtools.ts","../../src/client/composables/useThemeData.ts","../../src/client/composables/useThemeLocaleData.ts"],"sourcesContent":["import { setupDevtoolsPlugin } from '@vue/devtools-api'\nimport type { App } from 'vue'\nimport { watch } from 'vue'\nimport { DEVTOOLS } from 'vuepress/client'\nimport type { ThemeDataRef } from './useThemeData'\nimport type { ThemeLocaleDataRef } from './useThemeLocaleData'\n\nconst PLUGIN_ID = 'org.vuejs.vuepress.plugin-theme-data'\nconst PLUGIN_LABEL = 'VuePress Theme Data'\nconst INSPECTOR_THEME_DATA_ID = 'THEME_DATA'\nconst INSPECTOR_THEME_DATA_LABEL = 'Theme Data'\n\nexport const setupDevTools = (\n  app: App,\n  themeData: ThemeDataRef,\n  themeLocaleData: ThemeLocaleDataRef,\n): void => {\n  // setup devtools in dev mode\n  if (__VUEPRESS_DEV__ || __VUE_PROD_DEVTOOLS__) {\n    setupDevtoolsPlugin(\n      {\n        // fix recursive reference\n        app: app as never,\n        id: PLUGIN_ID,\n        label: PLUGIN_LABEL,\n        packageName: '@vuepress/plugin-theme-data',\n        homepage: 'https://vuepress.vuejs.org',\n        logo: 'https://vuepress.vuejs.org/images/hero.png',\n        componentStateTypes: [DEVTOOLS.COMPONENT_STATE_TYPE],\n      },\n      (api) => {\n        api.on.inspectComponent((payload) => {\n          payload.instanceData.state.push(\n            {\n              type: 'VuePress',\n              key: 'themeData',\n              editable: false,\n              value: themeData.value,\n            },\n            {\n              type: 'VuePress',\n              key: 'themeLocaleData',\n              editable: false,\n              value: themeLocaleData.value,\n            },\n          )\n        })\n\n        // setup custom inspector\n        api.addInspector({\n          id: DEVTOOLS.INSPECTOR_ID,\n          label: DEVTOOLS.INSPECTOR_LABEL,\n          icon: 'article',\n        })\n        api.on.getInspectorTree((payload) => {\n          if (payload.inspectorId !== DEVTOOLS.INSPECTOR_ID) return\n\n          payload.rootNodes.push({\n            id: INSPECTOR_THEME_DATA_ID,\n            label: INSPECTOR_THEME_DATA_LABEL,\n            children: [\n              {\n                id: 'themeData',\n                label: 'themeData',\n              },\n              {\n                id: 'themeLocaleData',\n                label: 'themeLocaleData',\n              },\n            ],\n          })\n        })\n\n        api.on.getInspectorState((payload) => {\n          if (payload.inspectorId !== DEVTOOLS.INSPECTOR_ID) return\n\n          // root nodes state\n          if (payload.nodeId === INSPECTOR_THEME_DATA_ID) {\n            payload.state[INSPECTOR_THEME_DATA_LABEL].push(\n              {\n                key: 'themeData',\n                value: themeData.value,\n              },\n              {\n                key: 'themeLocaleData',\n                value: themeLocaleData.value,\n              },\n            )\n          }\n\n          // root nodes children state\n          if (['themeData', 'themeLocaleData'].includes(payload.nodeId)) {\n            payload.state = {\n              [DEVTOOLS.INSPECTOR_STATE_SECTION_NAME]: [\n                {\n                  key: payload.nodeId,\n                  value:\n                    payload.nodeId === 'themeData'\n                      ? themeData.value\n                      : themeLocaleData.value,\n                },\n              ],\n            }\n          }\n        })\n\n        // refresh the component state and inspector state\n        watch([themeData, themeLocaleData], () => {\n          api.notifyComponentUpdate()\n          api.sendInspectorState(DEVTOOLS.INSPECTOR_ID)\n        })\n      },\n    )\n  }\n}\n","import { themeData as themeDataRaw } from '@internal/themeData'\nimport type { Ref } from 'vue'\nimport { ref } from 'vue'\nimport type { ThemeData } from '../../shared/index.js'\n\ndeclare const __VUE_HMR_RUNTIME__: Record<string, unknown>\n\nexport type ThemeDataRef<T extends ThemeData = ThemeData> = Ref<T>\n\nexport const themeData: ThemeDataRef = ref(themeDataRaw)\n\nexport const useThemeData = <\n  T extends ThemeData = ThemeData,\n>(): ThemeDataRef<T> => themeData as ThemeDataRef<T>\n\nif (__VUEPRESS_DEV__ && (import.meta.webpackHot || import.meta.hot)) {\n  __VUE_HMR_RUNTIME__.updateThemeData = (data: ThemeData) => {\n    themeData.value = data\n  }\n}\n","import type { ComputedRef, InjectionKey } from 'vue'\nimport { inject } from 'vue'\nimport type { RouteLocale } from 'vuepress/client'\nimport type { LocaleData } from 'vuepress/shared'\nimport type { ThemeData } from '../../shared/index.js'\n\nexport type ThemeLocaleDataRef<T extends LocaleData = LocaleData> =\n  ComputedRef<T>\n\nexport const themeLocaleDataSymbol: InjectionKey<ThemeLocaleDataRef> = Symbol(\n  __VUEPRESS_DEV__ ? 'themeLocaleData' : '',\n)\n\nexport const useThemeLocaleData = <\n  T extends ThemeData = ThemeData,\n>(): ThemeLocaleDataRef<T> => {\n  const themeLocaleData = inject(themeLocaleDataSymbol)\n  if (!themeLocaleData) {\n    throw new Error('useThemeLocaleData() is called without provider.')\n  }\n  return themeLocaleData as ThemeLocaleDataRef<T>\n}\n\n/**\n * Merge the locales fields to the root fields\n * according to the route path\n */\nexport const resolveThemeLocaleData = (\n  theme: ThemeData,\n  routeLocale: RouteLocale,\n): ThemeData => {\n  const { locales, ...baseOptions } = theme\n\n  return {\n    ...baseOptions,\n    ...locales?.[routeLocale],\n  }\n}\n"],"names":["PLUGIN_ID","PLUGIN_LABEL","INSPECTOR_THEME_DATA_ID","INSPECTOR_THEME_DATA_LABEL","setupDevTools","app","themeData","themeLocaleData","setupDevtoolsPlugin","DEVTOOLS","api","payload","watch","ref","themeDataRaw","useThemeData","data","themeLocaleDataSymbol","useThemeLocaleData","inject","resolveThemeLocaleData","theme","routeLocale","locales","baseOptions"],"mappings":"oMAOA,MAAMA,EAAY,uCACZC,EAAe,sBACfC,EAA0B,aAC1BC,EAA6B,aAEtBC,EAAgB,CAC3BC,EACAC,EACAC,IACS,EAEL,kBAAoB,wBACtBC,EACE,CAEE,IAAKH,EACL,GAAIL,EACJ,MAAOC,EACP,YAAa,8BACb,SAAU,6BACV,KAAM,6CACN,oBAAqB,CAACQ,EAAS,oBAAoB,CACrD,EACCC,GAAQ,CACPA,EAAI,GAAG,iBAAkBC,GAAY,CACnCA,EAAQ,aAAa,MAAM,KACzB,CACE,KAAM,WACN,IAAK,YACL,SAAU,GACV,MAAOL,EAAU,KACnB,EACA,CACE,KAAM,WACN,IAAK,kBACL,SAAU,GACV,MAAOC,EAAgB,KACzB,CACF,CACF,CAAC,EAGDG,EAAI,aAAa,CACf,GAAID,EAAS,aACb,MAAOA,EAAS,gBAChB,KAAM,SACR,CAAC,EACDC,EAAI,GAAG,iBAAkBC,GAAY,CAC/BA,EAAQ,cAAgBF,EAAS,cAErCE,EAAQ,UAAU,KAAK,CACrB,GAAIT,EACJ,MAAOC,EACP,SAAU,CACR,CACE,GAAI,YACJ,MAAO,WACT,EACA,CACE,GAAI,kBACJ,MAAO,iBACT,CACF,CACF,CAAC,CACH,CAAC,EAEDO,EAAI,GAAG,kBAAmBC,GAAY,CAChCA,EAAQ,cAAgBF,EAAS,eAGjCE,EAAQ,SAAWT,GACrBS,EAAQ,MAAMR,CAA0B,EAAE,KACxC,CACE,IAAK,YACL,MAAOG,EAAU,KACnB,EACA,CACE,IAAK,kBACL,MAAOC,EAAgB,KACzB,CACF,EAIE,CAAC,YAAa,iBAAiB,EAAE,SAASI,EAAQ,MAAM,IAC1DA,EAAQ,MAAQ,CACd,CAACF,EAAS,4BAA4B,EAAG,CACvC,CACE,IAAKE,EAAQ,OACb,MACEA,EAAQ,SAAW,YACfL,EAAU,MACVC,EAAgB,KACxB,CACF,CACF,GAEJ,CAAC,EAGDK,EAAM,CAACN,EAAWC,CAAe,EAAG,IAAM,CACxCG,EAAI,wBACJA,EAAI,mBAAmBD,EAAS,YAAY,CAC9C,CAAC,CACH,CACF,CAEJ,ECzGaH,EAA0BO,EAAIC,CAAY,EAE1CC,EAAe,IAEJT,EAEpB,mBAAqB,YAAY,YAAc,YAAY,OAC7D,oBAAoB,gBAAmBU,GAAoB,CACzDV,EAAU,MAAQU,CACpB,GCTK,MAAMC,EAA0D,OACrE,iBAAmB,kBAAoB,EACzC,EAEaC,EAAqB,IAEJ,CAC5B,MAAMX,EAAkBY,EAAOF,CAAqB,EACpD,GAAI,CAACV,EACH,MAAM,IAAI,MAAM,kDAAkD,EAEpE,OAAOA,CACT,EAMaa,EAAyB,CACpCC,EACAC,IACc,CACd,KAAM,CAAE,QAAAC,EAAS,GAAGC,CAAY,EAAIH,EAEpC,MAAO,CACL,GAAGG,EACH,GAAGD,IAAUD,CAAW,CAC1B,CACF"}
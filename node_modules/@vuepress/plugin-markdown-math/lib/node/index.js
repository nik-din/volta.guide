import{loadMhchem as f,katex as k}from"@mdit/plugin-katex-slim";import{createMathjaxInstance as $,mathjax as g}from"@mdit/plugin-mathjax-slim";import{ensureEndingSlash as y,Logger as w,getModulePath as M,isModuleAvailable as d,addCustomElement as C}from"@vuepress/helper";import{path as v,getDirname as E,logger as p,colors as c}from"vuepress/utils";const F=import.meta.dirname||E(import.meta.url),h=y(v.resolve(F,"../client")),u="@vuepress/plugin-markdown-math";new w(u);const I=async(t,n,s)=>{let o="";return n==="katex"?o+=`import "${M("katex/dist/katex.min.css",import.meta)}";
import "${h}styles/katex.css";
${s.copy?`import { useKatexCopy } from "${h}composables/useKatexCopy.js";

export default {
  setup: () => {
    useKatexCopy();
  }
};
`:""}`:o+=`import './mathjax.css';
`,t.writeTemp("markdown-math/config.js",o)},L=`mjx-container {
  overflow: auto hidden;
}
`,P=async(t,n)=>{await t.writeTemp("markdown-math/mathjax.css",`${n.outputStyle()}
${L}`)},b=({type:t,...n}={})=>{const s=d("mathjax-full",import.meta),o=d("katex",import.meta),r=t==="katex"&&o?"katex":t==="mathjax"&&s||s?"mathjax":o?"katex":null;if(!r||t&&r!==t){const e={katex:"katex",mathjax:"mathjax-full"};return p.error(r?`type is "${t}", but "${e[t]}" is not installed`:"No math renderer found, please install mathjax-full or katex"),{name:u}}const l=r==="mathjax"?$({...n,transformer:e=>e.replace(/^<mjx-container/,"<mjx-container v-pre")}):null;return{name:u,extendsBundlerOptions:(e,a)=>{r==="mathjax"&&C(e,a,/^mjx-/)},extendsMarkdown:async e=>{r==="mathjax"?(e.use(g,l),e.use(a=>{const x=a.render.bind(a);a.render=(i,m)=>{const j=x(i,m);return l.reset(),j}})):(n.mhchem&&await f(),e.use(k,{logger:(a,x,i,{filePathRelative:m})=>{a!=="newLineInDisplayMode"&&(a==="unicodeTextInMathMode"?p.warn(`Found unicode character ${i.text} inside tex${m?` in ${c.cyan(m)}`:""}. You should use ${c.magenta(`\\text{${i.text}}`)}`):p.warn(`${x}.${m?`
Found in ${c.cyan(m)}`:""}`))},...n,transformer:a=>a.replace(/^(<[a-z]+ )/g,"$1v-pre ")}))},onPrepared:async e=>{r==="mathjax"&&await P(e,l)},clientConfigFile:e=>I(e,r,n)}};export{b as markdownMathPlugin};
//# sourceMappingURL=index.js.map

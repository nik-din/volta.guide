import{createRequire as j}from"node:module";import{tex as v}from"@mdit/plugin-tex";import y from"upath";const I=j(import.meta.url);let u=!0,c,f,h,p,w,d,x,S;try{({mathjax:c}=await import("mathjax-full/js/mathjax.js")),{AllPackages:f}=await import("mathjax-full/js/input/tex/AllPackages.js"),{TeX:h}=await import("mathjax-full/js/input/tex.js"),{CHTML:p}=await import("mathjax-full/js/output/chtml.js"),{SVG:w}=await import("mathjax-full/js/output/svg.js"),{liteAdaptor:d}=await import("mathjax-full/js/adaptors/liteAdaptor.js"),{RegisterHTMLHandler:x}=await import("mathjax-full/js/handlers/html.js"),{AssistiveMmlHandler:S}=await import("mathjax-full/js/a11y/assistive-mml.js")}catch{/* istanbul ignore next -- @preserve */u=!1}const M=t=>{/* istanbul ignore if -- @preserve */return u?{InputJax:new h({packages:f,...t.tex}),OutputJax:t.output==="chtml"?new p({fontURL:y.dirname(I.resolve("mathjax-full/es5/output/chtml/fonts/woff-v2/MathJax_Zero.woff")),adaptiveCSS:!0,...t.chtml}):new w({fontCache:"none",...t.svg}),enableAssistiveMml:t.a11y!==!1}:(console.error('[@mdit/mathjax] "mathjax-full" is not installed!'),null)},H=(t={})=>{const e=M(t);/* istanbul ignore if -- @preserve */if(!e)return null;const{OutputJax:a,InputJax:i}=e,n=d(),s=x(n);t.a11y!==!1&&S(s);const r=()=>{a instanceof p&&a.clearCache()},o=()=>{i.reset()},m=()=>{const l=n.innerHTML(a.styleSheet(c.document("",e)));return r(),l};return{adaptor:n,documentOptions:e,allowInlineWithSpace:t.allowInlineWithSpace??!1,mathFence:t.mathFence??!1,clearStyle:r,reset:o,outputStyle:m,transformer:t.transformer??null}},T=(t,{allowInlineWithSpace:e,adaptor:a,documentOptions:i,mathFence:n,transformer:s})=>{t.use(v,{allowInlineWithSpace:e,mathFence:n,render:(r,o)=>{const m=c.document(r,i).convert(r,{display:o}),l=a.outerHTML(m);return s?.(l,o)??l}})};export{H as createMathjaxInstance,M as getDocumentOptions,T as mathjax};
//# sourceMappingURL=index.js.map

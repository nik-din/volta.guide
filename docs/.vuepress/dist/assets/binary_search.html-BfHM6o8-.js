import{_ as o,e as l,j as i,f as e,h as s,i as r,r as p,o as c,g as t}from"./app-Bs0xR4-3.js";const d={};function u(m,n){const a=p("RouteLink");return c(),l("div",null,[n[7]||(n[7]=i(`<h1 id="binary-search" tabindex="-1"><a class="header-anchor" href="#binary-search"><span>Binary search</span></a></h1><p>Complessità: O(logN)</p><h2 id="codice" tabindex="-1"><a class="header-anchor" href="#codice"><span>Codice</span></a></h2><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line"><span class="token keyword">int</span> l<span class="token punctuation">,</span> r<span class="token punctuation">;</span></span>
<span class="line">l <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> r <span class="token operator">=</span> n<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">while</span><span class="token punctuation">(</span>r<span class="token operator">-</span>l<span class="token operator">&gt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">int</span> m <span class="token operator">=</span> <span class="token punctuation">(</span>l<span class="token operator">+</span>r<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">check</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span> l <span class="token operator">=</span> m<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">else</span> r <span class="token operator">=</span> m<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Se <code>check(x)</code> è prima vera e poi falsa (se no è analogo), <code>l</code> deve essere un valore per cui siamo sicuri che funzioni, mentre <code>r</code> che siamo sicuri non funzioni. Alla fine <code>l</code> sarà il più grande t.c <code>check(l)</code> è vero mentre <code>r</code> sarà il più piccolo t.c. che sia falso.</p><h2 id="risorse-esterne" tabindex="-1"><a class="header-anchor" href="#risorse-esterne"><span>Risorse esterne</span></a></h2><ul><li><a href="https://cp-algorithms.com/num_methods/binary_search.html" target="_blank" rel="noopener noreferrer">https://cp-algorithms.com/num_methods/binary_search.html</a> Approfondimenti:</li><li><a href="https://cp-algorithms.com/num_methods/ternary_search.html" target="_blank" rel="noopener noreferrer">ternary search</a></li><li><a href="https://codeforces.com/blog/entry/45578" target="_blank" rel="noopener noreferrer">binary search parallele</a></li></ul><h2 id="problemi" tabindex="-1"><a class="header-anchor" href="#problemi"><span>Problemi</span></a></h2>`,8)),e("ul",null,[n[2]||(n[2]=e("li",null,[e("a",{href:"https://training.olinfo.it/task/ois_annoluce",target:"_blank",rel:"noopener noreferrer"},"Annoluce")],-1)),n[3]||(n[3]=e("li",null,[e("a",{href:"https://training.olinfo.it/task/ois_avg2",target:"_blank",rel:"noopener noreferrer"},"avg2")],-1)),n[4]||(n[4]=e("li",null,[e("a",{href:"https://training.olinfo.it/task/oii_aeroporto",target:"_blank",rel:"noopener noreferrer"},"Aeroporto")],-1)),e("li",null,[s(a,{to:"/materiale/problemi/trendytrash.html"},{default:r(()=>n[0]||(n[0]=[t("Trendytrash")])),_:1})]),e("li",null,[s(a,{to:"/materiale/problemi/altavelocit%C3%A0.html"},{default:r(()=>n[1]||(n[1]=[t("Altavelocità")])),_:1})]),n[5]||(n[5]=e("li",null,[e("a",{href:"https://training.olinfo.it/task/ois_wine",target:"_blank",rel:"noopener noreferrer"},"Wine")],-1)),n[6]||(n[6]=e("li",null,[e("a",{href:"https://training.olinfo.it/task/oii_corteo",target:"_blank",rel:"noopener noreferrer"},"Corteo")],-1))])])}const k=o(d,[["render",u],["__file","binary_search.html.vue"]]),b=JSON.parse('{"path":"/materiale/binary_search.html","title":"Binary search","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Codice","slug":"codice","link":"#codice","children":[]},{"level":2,"title":"Risorse esterne","slug":"risorse-esterne","link":"#risorse-esterne","children":[]},{"level":2,"title":"Problemi","slug":"problemi","link":"#problemi","children":[]}],"git":{"updatedTime":1760730657000,"contributors":[{"name":"nik-din","username":"nik-din","email":"nik.dindo@gmail.com","commits":3,"url":"https://github.com/nik-din"}]},"filePathRelative":"materiale/binary_search.md"}');export{k as comp,b as data};

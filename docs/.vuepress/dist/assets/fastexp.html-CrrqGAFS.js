import s from"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML?vue&type=script&src=true&lang.js?config=TeX-AMS-MML_HTMLorMML";import{_ as a,e,j as t,o as p}from"./app-DEbVUHJ0.js";function o(i,n,c,l,r,d){return p(),e("div",null,n[0]||(n[0]=[t(`<h1 id="esponenziazione-veloce" tabindex="-1"><a class="header-anchor" href="#esponenziazione-veloce"><span>Esponenziazione veloce</span></a></h1><p>Complessità: $O(\\text{log}N)$ (dove N è l&#39;esponente)</p><h2 id="codice" tabindex="-1"><a class="header-anchor" href="#codice"><span>Codice</span></a></h2><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line"><span class="token keyword">int</span> <span class="token function">fastexp</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span>b<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token function">fastexp</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span>b<span class="token operator">%</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">return</span> c<span class="token operator">*</span>c<span class="token operator">*</span>a<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> c<span class="token operator">*</span>c<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Attenti a overflow, spesso va implementato con i <code>long long</code> e i moduli.</p><h2 id="risorse-esterne" tabindex="-1"><a class="header-anchor" href="#risorse-esterne"><span>Risorse esterne</span></a></h2><p><a href="https://cp-algorithms.com/algebra/binary-exp.html" target="_blank" rel="noopener noreferrer">https://cp-algorithms.com/algebra/binary-exp.html</a></p>`,7)]))}const m=a(s,[["render",o],["__file","fastexp.html.vue"]]),h=JSON.parse('{"path":"/materiale/fastexp.html","title":"Esponenziazione veloce","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Codice","slug":"codice","link":"#codice","children":[]},{"level":2,"title":"Risorse esterne","slug":"risorse-esterne","link":"#risorse-esterne","children":[]}],"git":{"updatedTime":1740778779000,"contributors":[{"name":"nik-din","username":"nik-din","email":"nik.dindo@gmail.com","commits":3,"url":"https://github.com/nik-din"}]},"filePathRelative":"materiale/fastexp.md"}');export{m as comp,h as data};

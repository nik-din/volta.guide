import{_ as a,e as s,j as e,o as t}from"./app-Bs0xR4-3.js";const i={};function p(o,n){return t(),s("div",null,n[0]||(n[0]=[e(`<h1 id="minimum-stack" tabindex="-1"><a class="header-anchor" href="#minimum-stack"><span>Minimum Stack</span></a></h1><p>Lo <em>stack</em> è una struttura dati della STL di tipo LIFO (i.e. Last-In, First-Out), che consente di aggiungere e rimuovere elementi solo dalla cima in <code>O(1)</code>.</p><p>Vogliamo modificare lo stack in modo da riuscire a trovare anche il minimo in tempo costante. Per fare ciò memorizzeremo ogni elemento in coppie: l&#39;elemento e il minimo nello stack a partire da questo.</p><p>Utilizzeremo quindi la seguente struttura dati:</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line">stack<span class="token operator">&lt;</span>pair<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">&gt;&gt;</span> st<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Vediamo ora nel dettaglio le funzioni supportate.</p><h2 id="aggiungere-un-elemento" tabindex="-1"><a class="header-anchor" href="#aggiungere-un-elemento"><span>Aggiungere un elemento</span></a></h2><p>Per aggiungere un elemento basta aggiungere alla cima dello stack la seguente coppia: l&#39;elemento che vogliamo aggiungere e il minimo nello stack.</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line"><span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    st<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>x<span class="token punctuation">,</span> st<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> x <span class="token operator">:</span> <span class="token function">min</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> st<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>second<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="rimuovere-un-elemento" tabindex="-1"><a class="header-anchor" href="#rimuovere-un-elemento"><span>Rimuovere un elemento</span></a></h2><p>Per rimuovere un elemento possiamo semplicemente togliere quello in cima.</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line"><span class="token keyword">void</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    st<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="trovare-il-minimo" tabindex="-1"><a class="header-anchor" href="#trovare-il-minimo"><span>Trovare il minimo</span></a></h2><p>Il minimo nello stack è memorizzato nel secondo elemento della coppia in cima.</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line"><span class="token keyword">int</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> st<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>second<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15)]))}const c=a(i,[["render",p],["__file","minstack.html.vue"]]),u=JSON.parse('{"path":"/materiale/minstack.html","title":"Minimum Stack","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Aggiungere un elemento","slug":"aggiungere-un-elemento","link":"#aggiungere-un-elemento","children":[]},{"level":2,"title":"Rimuovere un elemento","slug":"rimuovere-un-elemento","link":"#rimuovere-un-elemento","children":[]},{"level":2,"title":"Trovare il minimo","slug":"trovare-il-minimo","link":"#trovare-il-minimo","children":[]}],"git":{"updatedTime":1740782743000,"contributors":[{"name":"ciao-gio","username":"ciao-gio","email":"maiellarogio08@gmail.com","commits":2,"url":"https://github.com/ciao-gio"},{"name":"nik-din","username":"nik-din","email":"nik.dindo@gmail.com","commits":1,"url":"https://github.com/nik-din"}]},"filePathRelative":"materiale/minstack.md"}');export{c as comp,u as data};

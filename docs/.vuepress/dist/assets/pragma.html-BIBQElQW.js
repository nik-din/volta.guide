import{_ as s,e as n,j as e,o as t}from"./app-Bs0xR4-3.js";const p={};function o(i,a){return t(),n("div",null,a[0]||(a[0]=[e(`<h1 id="pragma" tabindex="-1"><a class="header-anchor" href="#pragma"><span>Pragma</span></a></h1><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">GCC <span class="token function">optimize</span><span class="token punctuation">(</span></span><span class="token string">&quot;O3,unroll-loops,fast-math,trapv&quot;</span><span class="token expression"><span class="token punctuation">)</span></span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">GCC <span class="token function">target</span><span class="token punctuation">(</span></span><span class="token string">&quot;popcnt,avx2,avx512bw&quot;</span><span class="token expression"><span class="token punctuation">)</span></span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>trap2</code> crasha con overflow.</p>`,3)]))}const c=s(p,[["render",o],["__file","pragma.html.vue"]]),l=JSON.parse('{"path":"/materiale/pragma.html","title":"Pragma","lang":"en-US","frontmatter":{},"headers":[],"git":{"updatedTime":1760730657000,"contributors":[{"name":"nik-din","username":"nik-din","email":"nik.dindo@gmail.com","commits":1,"url":"https://github.com/nik-din"}]},"filePathRelative":"materiale/pragma.md"}');export{c as comp,l as data};
